/**
 * author：Doris19967
 *
/

import java.util.ArrayList;
import java.util.List;

public class Prim {

	/**
	 * @param args
	 */
	static int Max=Integer.MAX_VALUE;
	public static void prim(int[][] graph,int n){
		char[] V=new char[]{'a','b','c','d','e','f'};
		int[] E=new int[n];
		int[] mid=new int[n];
		List<Character> list=new ArrayList<Character>();//存储加入结点的顺序
		int i,j,min;
		int mind;
		//int sum=0;
		for(i=1;i<n;i++){
			E[i]=graph[0][i];
			mid[i]=0;
		}
		list.add(V[0]);
		for(i=1;i<n;i++){
			min=Max;
			mind=0;
			//找树中最近的顶点
			for(j=1;j<n;j++){
				if(E[j]!=0&&E[j]<min){
					min=E[j];
					mind=j;
				}
			}
			if(mind==0){
				return;
			}
			list.add(V[mind]);
			E[mind]=0;
			//sum+=min;
			System.out.print("{"+V[mid[mind]]+","+V[mind]+","+min+"}");
			//加入该点后，更新其他节点到集合的距离
			for(j=1;j<n;j++){
				if(E[j]!=0&&E[j]>graph[mind][j]){
					E[j]=graph[mind][j];
					mid[j]=mind;
				}
			}
		}
		//System.out.println("sum:"+sum);
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
int[][]map=new int[][]{{0,3,Max,Max,6,5},
		{3,0,1,Max,Max,4},
		{Max,1,0,6,Max,4},
		{Max,Max,6,0,8,5},
		{6,Max,Max,8,0,2},
		{5,4,4,5,2,Max}};
System.out.print("Prim:");
prim(map,map.length);
	}

}
